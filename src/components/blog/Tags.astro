---
import { getLangFromUrl } from '../../i18n/utils';
const lang = getLangFromUrl(Astro.url);
// Split by language to avoid dynamic imports
let allPosts = [];
if (lang === 'en') {
  allPosts = await Astro.glob('../../pages/en/blog/posts/*.md') as any[];
} else {
  allPosts = await Astro.glob('../../pages/es/blog/posts/*.md') as any[];
}

import Tag from "../ui/Tag.astro";

const tags = [...new Set(allPosts.map((post) => post.frontmatter.tags || []).flat())].filter(Boolean);
type VariantType = "default" | "vertical" | "compact";
const { variant = "default" } = Astro.props as { variant?: VariantType };

// Common base classes
const baseClasses = "max-w-7xl";

// Variant-specific classes
const variantClasses: Record<VariantType, string> = {
    default: "max-lg:px-8 py-8 max-md:py-4 flex-wrap mx-auto gap-4 max-sm:gap-3 justify-center items-center flex flex-row",
    vertical: "gap-6 justify-start items-start flex flex-col",
    compact: "flex-wrap mx-auto gap-2 max-sm:gap-3 justify-start flex flex-row"
};

// Combine base classes with variant-specific classes
const classes = `${baseClasses} ${variantClasses[variant]}`;
---

<div id="tags" class={classes}>
    {tags.map((tagName) => (
        <Tag tag={tagName}>{tagName}</Tag>
    ))}
</div>







